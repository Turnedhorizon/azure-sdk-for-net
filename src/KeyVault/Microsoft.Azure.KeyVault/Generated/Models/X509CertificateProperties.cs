// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.KeyVault.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    public partial class X509CertificateProperties
    {
        /// <summary>
        /// Initializes a new instance of the X509CertificateProperties class.
        /// </summary>
        public X509CertificateProperties() { }

        /// <summary>
        /// Initializes a new instance of the X509CertificateProperties class.
        /// </summary>
        public X509CertificateProperties(string subject = default(string), IList<string> ekus = default(IList<string>), SubjectAlternativeNames subjectAlternativeNames = default(SubjectAlternativeNames), IList<string> keyUsage = default(IList<string>), int? validityInMonths = default(int?))
        {
            Subject = subject;
            Ekus = ekus;
            SubjectAlternativeNames = subjectAlternativeNames;
            KeyUsage = keyUsage;
            ValidityInMonths = validityInMonths;
        }

        /// <summary>
        /// The subject name. Should be a valid X500 Distinguished Name.
        /// </summary>
        [JsonProperty(PropertyName = "subject")]
        public string Subject { get; set; }

        /// <summary>
        /// The subject alternate names.
        /// </summary>
        [JsonProperty(PropertyName = "ekus")]
        public IList<string> Ekus { get; set; }

        /// <summary>
        /// The subject alternative names.
        /// </summary>
        [JsonProperty(PropertyName = "sans")]
        public SubjectAlternativeNames SubjectAlternativeNames { get; set; }

        /// <summary>
        /// The subject alternate names.
        /// </summary>
        [JsonProperty(PropertyName = "key_usage")]
        public IList<string> KeyUsage { get; set; }

        /// <summary>
        /// The subject alternate names.
        /// </summary>
        [JsonProperty(PropertyName = "validity_months")]
        public int? ValidityInMonths { get; set; }

    }
}
